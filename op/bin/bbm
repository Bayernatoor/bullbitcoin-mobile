#!/bin/bash
# shellcheck source=/dev/null

export BBM=bullbitcoin-mobile
export BBM_OWNER="SatoshiPortal"
BBM_HOME=$(cd "$BBM_OP_HOME/../" && pwd)
export BBM_OP_HOME
export BBM_HOME

export BBM_OP_ENV="$BBM_OP_HOME/bin/.env"

. "$BBM_OP_ENV"

current_os="$(uname)"
export SED_COMPAT="sed -i"  # Default for Linux

# Adjust the sed command for macOS
if [ "$current_os" = "Darwin" ]; then
    SED_COMPAT="sed -i ''"  # macOS requires '' for in-place file edits with sed
fi

. "$BBM_OP_HOME/bin/mod/form.lib"
. "$BBM_OP_HOME/bin/mod/log.lib"
# core
. "$BBM_OP_HOME/bin/mod/build.core"
. "$BBM_OP_HOME/bin/mod/code.core"
. "$BBM_OP_HOME/bin/mod/keys.core"
. "$BBM_OP_HOME/bin/mod/deps.core"
. "$BBM_OP_HOME/bin/mod/git.core"


CLI_NAME="bbm"
CLI_VERSION="0.1.9"

show_op_help.log() {
    cat <<EOF
$(blue.log $CLI_NAME) v$CLI_VERSION
Usage: bbm [OPTIONS] COMMAND [ARGUMENTS]

Commands:
code           start a coding session
git            git sub-commands
test           run all tests
keys           pgp & keytool setup
build          build and sign a release candidate

EOF
}
#
#
# Main CLI logicj
#
#
if [ "$#" -eq 0 ]; then
    show_op_help.log
    exit 1
fi

# 0-op-dev 1-subcommand 2-arg
case "$1" in
    -h|--help)
        show_op_help.log
        exit 0
        ;;
    -v|--version)
        echo "$CLI_NAME v$CLI_VERSION"
        exit 0
        ;;
    keys)
        main.keys "$@"
        exit 0
        ;;
    deps)
        main.deps
        exit 0
        ;;
    git)
        main.git "$2" "$3" "$4"
        exit 0
    ;;
    code)
        main.code
        exit 0
        ;;
    build)
        main.build "$2"
        exit 0
        ;;

    # ... [Any other cases you might have previously]
    *)
        echo "Error: Unknown command: $1"
        show_op_help.log
        exit 1
        ;;
esac